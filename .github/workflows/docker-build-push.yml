name: Build, Push to Docker Hub and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOCKER_HUB_REPOSITORY: hercules2/functionhall-userservice
  IMAGE_TAG: latest

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_HUB_REPOSITORY }}:${{ env.IMAGE_TAG }}
          build-args: |
            SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}
            SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}
            SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}
            SPRING_SECURITY_USER_NAME=${{ secrets.SPRING_SECURITY_USER_NAME }}
            SPRING_SECURITY_USER_PASSWORD=${{ secrets.SPRING_SECURITY_USER_PASSWORD }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to EC2
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Set image details
            IMAGE="hercules2/functionhall-userservice"
            TAG="latest"
          
            # Login to Docker Hub
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          
            # Pull image (force pull latest)
            docker pull $IMAGE:$TAG
          
            # Stop and remove any old container
            docker stop functionhall-userservice || true
            docker rm functionhall-userservice || true
          
            # Export environment variables explicitly
            export SPRING_DATASOURCE_URL="${{ secrets.SPRING_DATASOURCE_URL }}"
            export SPRING_DATASOURCE_USERNAME="${{ secrets.SPRING_DATASOURCE_USERNAME }}"
            export SPRING_DATASOURCE_PASSWORD="${{ secrets.SPRING_DATASOURCE_PASSWORD }}"
            export SPRING_SECURITY_USER_NAME="${{ secrets.SPRING_SECURITY_USER_NAME }}"
            export SPRING_SECURITY_USER_PASSWORD="${{ secrets.SPRING_SECURITY_USER_PASSWORD }}"
          
            # Run the new container
            docker run -d \
              --name functionhall-userservice \
              --restart always \
              -p 80:8080 \
              -e SPRING_DATASOURCE_URL \
              -e SPRING_DATASOURCE_USERNAME \
              -e SPRING_DATASOURCE_PASSWORD \
              -e SPRING_SECURITY_USER_NAME \
              -e SPRING_SECURITY_USER_PASSWORD \
              -e SPRING_PROFILES_ACTIVE=prod \
              $IMAGE:$TAG
          
            echo "âœ… Container started successfully"
            docker system prune -f
